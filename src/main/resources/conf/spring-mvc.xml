<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <context:annotation-config/>

    <!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="hello"
                            use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 AnnotationMethodHandlerAdapter -->
   <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="hello.common.StringHttpMessageConverterUTF8"
                      id="stringHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>

    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
                <value>application/octet-stream</value>
            </list>
        </property>
    </bean>

    <!-- AOP配置 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 开启代理 aop -->

    <mvc:annotation-driven/>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <!-- 对静态资源文件的访问 -->
 <!--   <mvc:resources mapping="/css/**" location="/WEB-INF/css/" cache-period="0"/>
    <mvc:resources mapping="/fonts/**" location="/WEB-INF/fonts/" cache-period="0"/>
    <mvc:resources mapping="/image/**" location="/WEB-INF/image/" cache-period="0"/>
    <mvc:resources mapping="/images/**" location="/WEB-INF/images/" cache-period="0"/>
    <mvc:resources mapping="/img/**" location="/WEB-INF/img/" cache-period="0"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/" cache-period="0"/>-->

    <mvc:resources mapping="/jsp/**" location="/WEB-INF/jsp/" cache-period="0"/>
    <!-- 加Html方式进行展示-->
    <mvc:resources mapping="/**" location="/WEB-INF/html/"  cache-period="0" />
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <ref bean="stringHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--引入 定时任务-->
   <!-- <import resource="classpath:conf/quartzJob.xml" />-->

</beans>